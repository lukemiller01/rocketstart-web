{"ast":null,"code":"import { CREATE } from '../constants/actionTypes.js';\nconst reducersPosts = function () {\n  let users = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case CREATE:\n      return [...users, action.payload];\n    default:\n      return users;\n  }\n}; // Reducer is a function that accepts a state and an action and returns data.\n\nexport default reducersPosts;\n\n// import { createSlice } from \"@reduxjs/toolkit\"\n\n// export const userReducer = createSlice({\n//     name: \"user\",\n//     initialState: {\n//         value: null\n//     },\n\n//     reducers: {\n//         login: (state, action) => {\n//             state.user = action.payload;\n//         },\n//         logout: (state) => {\n//             state.user = null;\n//         },\n//     },\n// });\n\n// export const { login, logout } = userReducer.actions;\n// export const selectUser = (state) => state.user.user;\n// export default userReducer.reducer;","map":{"version":3,"names":["CREATE","reducersPosts","users","action","type","payload"],"sources":["/Users/miller/Documents/rocketstart-web/client/src/reducers/user.js"],"sourcesContent":["import { CREATE } from '../constants/actionTypes.js';\n\nconst reducersPosts = (users = [], action) => {\n    switch (action.type) {\n        case CREATE:\n            return [...users, action.payload];\n        default:\n            return users;\n    }\n}; // Reducer is a function that accepts a state and an action and returns data.\n\nexport default reducersPosts;\n\n// import { createSlice } from \"@reduxjs/toolkit\"\n\n// export const userReducer = createSlice({\n//     name: \"user\",\n//     initialState: {\n//         value: null\n//     },\n\n//     reducers: {\n//         login: (state, action) => {\n//             state.user = action.payload;\n//         },\n//         logout: (state) => {\n//             state.user = null;\n//         },\n//     },\n// });\n\n// export const { login, logout } = userReducer.actions;\n// export const selectUser = (state) => state.user.user;\n// export default userReducer.reducer;"],"mappings":"AAAA,SAASA,MAAM,QAAQ,6BAA6B;AAEpD,MAAMC,aAAa,GAAG,YAAwB;EAAA,IAAvBC,KAAK,uEAAG,EAAE;EAAA,IAAEC,MAAM;EACrC,QAAQA,MAAM,CAACC,IAAI;IACf,KAAKJ,MAAM;MACP,OAAO,CAAC,GAAGE,KAAK,EAAEC,MAAM,CAACE,OAAO,CAAC;IACrC;MACI,OAAOH,KAAK;EAAC;AAEzB,CAAC,CAAC,CAAC;;AAEH,eAAeD,aAAa;;AAE5B;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}