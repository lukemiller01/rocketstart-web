{"ast":null,"code":"var _jsxFileName = \"/Users/miller/Documents/rocketstart-web/client/src/pages/auth/verify/VerifyEmail.jsx\";\nimport React, { Component } from 'react';\nimport Loading from '../../../components/loading/Loading';\nimport auth from '../../../firebase';\nimport AuthResult from '../AuthResult';\nimport { applyActionCode } from \"firebase/auth\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class VerifyEmail extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      error: '',\n      validCode: null,\n      verifiedCode: false\n    };\n  }\n  componentDidMount() {\n    // Try to apply the email verification code.\n\n    applyActionCode(auth, this.props.actionCode).then(() => {\n      // Email address has been verified.\n      this.setState({\n        validCode: true,\n        verifiedCode: true\n      });\n    }, error => {\n      // Code is invalid or expired. Ask the user to verify their email address\n      this.setState({\n        error: error.message,\n        validCode: false,\n        verifiedCode: true\n      });\n    });\n  }\n  render() {\n    const {\n      validCode,\n      verifiedCode\n    } = this.state;\n    let component;\n    if (!verifiedCode) {\n      component = /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 19\n      }, this);\n    } else if (verifiedCode && validCode) {\n      component = /*#__PURE__*/_jsxDEV(AuthResult, {\n        action: 'Email verification',\n        result: 'successful.',\n        message: 'Welcome to rocketstart!'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 21\n      }, this);\n    } else if (verifiedCode && !validCode) {\n      component = /*#__PURE__*/_jsxDEV(AuthResult, {\n        action: 'Email verification',\n        result: 'unsuccessful.',\n        message: 'Your request to verify your email has expired or the link has already been used. Please try resending a code.'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 21\n      }, this);\n    }\n    return component;\n  }\n}","map":{"version":3,"names":["React","Component","Loading","auth","AuthResult","applyActionCode","VerifyEmail","state","error","validCode","verifiedCode","componentDidMount","props","actionCode","then","setState","message","render","component"],"sources":["/Users/miller/Documents/rocketstart-web/client/src/pages/auth/verify/VerifyEmail.jsx"],"sourcesContent":["import React, { Component } from 'react';\nimport Loading from '../../../components/loading/Loading';\nimport auth from '../../../firebase';\nimport AuthResult from '../AuthResult';\nimport {\n  applyActionCode,\n  } from \"firebase/auth\";\n\nexport default class VerifyEmail extends Component {\n  state = {\n    error: '',\n    validCode: null,\n    verifiedCode: false,\n  }\n\n  componentDidMount() {\n    // Try to apply the email verification code.\n    \n      applyActionCode(auth, this.props.actionCode)\n      .then(() => {\n        // Email address has been verified.\n        this.setState({ validCode: true, verifiedCode: true });\n      }, error => {\n        // Code is invalid or expired. Ask the user to verify their email address\n        this.setState({ error: error.message, validCode: false, verifiedCode: true });\n      });\n  }\n\n  render() {\n    const {\n      validCode,\n      verifiedCode,\n    } = this.state;\n\n    let component;\n    if (!verifiedCode) {\n      component = <Loading/>;\n    } else if (verifiedCode && validCode) {\n      component = ( <AuthResult action={'Email verification'} result={'successful.'} message={'Welcome to rocketstart!'}/> );\n    } else if (verifiedCode && !validCode) {\n      component = ( <AuthResult action={'Email verification'} result={'unsuccessful.'} message={'Your request to verify your email has expired or the link has already been used. Please try resending a code.'}/> );\n    }\n\n    return component;\n  }\n}"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,OAAOC,OAAO,MAAM,qCAAqC;AACzD,OAAOC,IAAI,MAAM,mBAAmB;AACpC,OAAOC,UAAU,MAAM,eAAe;AACtC,SACEC,eAAe,QACR,eAAe;AAAC;AAEzB,eAAe,MAAMC,WAAW,SAASL,SAAS,CAAC;EAAA;IAAA;IAAA,KACjDM,KAAK,GAAG;MACNC,KAAK,EAAE,EAAE;MACTC,SAAS,EAAE,IAAI;MACfC,YAAY,EAAE;IAChB,CAAC;EAAA;EAEDC,iBAAiB,GAAG;IAClB;;IAEEN,eAAe,CAACF,IAAI,EAAE,IAAI,CAACS,KAAK,CAACC,UAAU,CAAC,CAC3CC,IAAI,CAAC,MAAM;MACV;MACA,IAAI,CAACC,QAAQ,CAAC;QAAEN,SAAS,EAAE,IAAI;QAAEC,YAAY,EAAE;MAAK,CAAC,CAAC;IACxD,CAAC,EAAEF,KAAK,IAAI;MACV;MACA,IAAI,CAACO,QAAQ,CAAC;QAAEP,KAAK,EAAEA,KAAK,CAACQ,OAAO;QAAEP,SAAS,EAAE,KAAK;QAAEC,YAAY,EAAE;MAAK,CAAC,CAAC;IAC/E,CAAC,CAAC;EACN;EAEAO,MAAM,GAAG;IACP,MAAM;MACJR,SAAS;MACTC;IACF,CAAC,GAAG,IAAI,CAACH,KAAK;IAEd,IAAIW,SAAS;IACb,IAAI,CAACR,YAAY,EAAE;MACjBQ,SAAS,gBAAG,QAAC,OAAO;QAAA;QAAA;QAAA;MAAA,QAAE;IACxB,CAAC,MAAM,IAAIR,YAAY,IAAID,SAAS,EAAE;MACpCS,SAAS,gBAAK,QAAC,UAAU;QAAC,MAAM,EAAE,oBAAqB;QAAC,MAAM,EAAE,aAAc;QAAC,OAAO,EAAE;MAA0B;QAAA;QAAA;QAAA;MAAA,QAAI;IACxH,CAAC,MAAM,IAAIR,YAAY,IAAI,CAACD,SAAS,EAAE;MACrCS,SAAS,gBAAK,QAAC,UAAU;QAAC,MAAM,EAAE,oBAAqB;QAAC,MAAM,EAAE,eAAgB;QAAC,OAAO,EAAE;MAAgH;QAAA;QAAA;QAAA;MAAA,QAAI;IAChN;IAEA,OAAOA,SAAS;EAClB;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}