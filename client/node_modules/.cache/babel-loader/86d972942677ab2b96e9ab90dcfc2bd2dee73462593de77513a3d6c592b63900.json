{"ast":null,"code":"var _jsxFileName = \"/Users/miller/Documents/rocketstart-web/client/src/pages/auth/components/reset/ResetPassword.jsx\";\nimport React, { Component } from 'react';\nimport Loading from '../../../../components/loading/Loading';\nimport auth from '../../../../firebase';\nimport AuthResult from '../verify/AuthResult';\nimport { verifyPasswordResetCode } from \"firebase/auth\";\nimport PasswordResult from './PasswordResult';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class ResetPassword extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      validCode: null,\n      verifiedCode: false\n    };\n  }\n  componentDidMount() {\n    // Try to apply the email verification code.\n\n    verifyPasswordResetCode(auth, this.props.actionCode).then(() => {\n      // Email address has been verified.\n      this.setState({\n        validCode: true,\n        verifiedCode: true\n      });\n    }, error => {\n      // Code is invalid or expired. Ask the user to verify their email address\n      this.setState({\n        error: error.message,\n        validCode: false,\n        verifiedCode: true\n      });\n    });\n  }\n  render() {\n    const {\n      validCode,\n      verifiedCode\n    } = this.state;\n    let component;\n    if (!verifiedCode) {\n      component = /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 19\n      }, this);\n    } else if (verifiedCode && validCode) {\n      component = /*#__PURE__*/_jsxDEV(PasswordResult, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 21\n      }, this);\n    } else if (verifiedCode && !validCode) {\n      component = /*#__PURE__*/_jsxDEV(AuthResult, {\n        action: 'Password reset',\n        result: 'unsuccessful.',\n        message: 'Your request to reset your password has expired or the link has already been used. Please try again.'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 21\n      }, this);\n    }\n    return component;\n  }\n}","map":{"version":3,"names":["React","Component","Loading","auth","AuthResult","verifyPasswordResetCode","PasswordResult","ResetPassword","state","validCode","verifiedCode","componentDidMount","props","actionCode","then","setState","error","message","render","component"],"sources":["/Users/miller/Documents/rocketstart-web/client/src/pages/auth/components/reset/ResetPassword.jsx"],"sourcesContent":["import React, { Component } from 'react';\nimport Loading from '../../../../components/loading/Loading';\nimport auth from '../../../../firebase';\nimport AuthResult from '../verify/AuthResult';\nimport {\n  verifyPasswordResetCode\n  } from \"firebase/auth\";\nimport PasswordResult from './PasswordResult';\n\nexport default class ResetPassword extends Component {\n  state = { validCode: null, verifiedCode: false }\n\n  componentDidMount() {\n    // Try to apply the email verification code.\n    \n    verifyPasswordResetCode(auth, this.props.actionCode)\n    .then(() => {\n      // Email address has been verified.\n      this.setState({ validCode: true, verifiedCode: true });\n    }, error => {\n      // Code is invalid or expired. Ask the user to verify their email address\n      this.setState({ error: error.message, validCode: false, verifiedCode: true });\n    });\n  }\n\n  render() {\n    const { validCode, verifiedCode } = this.state;\n\n    let component;\n    if (!verifiedCode) {\n      component = <Loading/>;\n    } else if (verifiedCode && validCode) {\n      component = ( <PasswordResult/> );\n    } else if (verifiedCode && !validCode) {\n      component = ( <AuthResult action={'Password reset'} result={'unsuccessful.'} message={'Your request to reset your password has expired or the link has already been used. Please try again.'}/> );\n    }\n\n    return component;\n  }\n}"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,OAAOC,OAAO,MAAM,wCAAwC;AAC5D,OAAOC,IAAI,MAAM,sBAAsB;AACvC,OAAOC,UAAU,MAAM,sBAAsB;AAC7C,SACEC,uBAAuB,QAChB,eAAe;AACxB,OAAOC,cAAc,MAAM,kBAAkB;AAAC;AAE9C,eAAe,MAAMC,aAAa,SAASN,SAAS,CAAC;EAAA;IAAA;IAAA,KACnDO,KAAK,GAAG;MAAEC,SAAS,EAAE,IAAI;MAAEC,YAAY,EAAE;IAAM,CAAC;EAAA;EAEhDC,iBAAiB,GAAG;IAClB;;IAEAN,uBAAuB,CAACF,IAAI,EAAE,IAAI,CAACS,KAAK,CAACC,UAAU,CAAC,CACnDC,IAAI,CAAC,MAAM;MACV;MACA,IAAI,CAACC,QAAQ,CAAC;QAAEN,SAAS,EAAE,IAAI;QAAEC,YAAY,EAAE;MAAK,CAAC,CAAC;IACxD,CAAC,EAAEM,KAAK,IAAI;MACV;MACA,IAAI,CAACD,QAAQ,CAAC;QAAEC,KAAK,EAAEA,KAAK,CAACC,OAAO;QAAER,SAAS,EAAE,KAAK;QAAEC,YAAY,EAAE;MAAK,CAAC,CAAC;IAC/E,CAAC,CAAC;EACJ;EAEAQ,MAAM,GAAG;IACP,MAAM;MAAET,SAAS;MAAEC;IAAa,CAAC,GAAG,IAAI,CAACF,KAAK;IAE9C,IAAIW,SAAS;IACb,IAAI,CAACT,YAAY,EAAE;MACjBS,SAAS,gBAAG,QAAC,OAAO;QAAA;QAAA;QAAA;MAAA,QAAE;IACxB,CAAC,MAAM,IAAIT,YAAY,IAAID,SAAS,EAAE;MACpCU,SAAS,gBAAK,QAAC,cAAc;QAAA;QAAA;QAAA;MAAA,QAAI;IACnC,CAAC,MAAM,IAAIT,YAAY,IAAI,CAACD,SAAS,EAAE;MACrCU,SAAS,gBAAK,QAAC,UAAU;QAAC,MAAM,EAAE,gBAAiB;QAAC,MAAM,EAAE,eAAgB;QAAC,OAAO,EAAE;MAAuG;QAAA;QAAA;QAAA;MAAA,QAAI;IACnM;IAEA,OAAOA,SAAS;EAClB;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}