{"ast":null,"code":"var _jsxFileName = \"/Users/miller/Documents/rocketstart-web/client/src/modals/verification/Verification.jsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useState, useRef, useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useUserAuth } from '../../context/AuthProvider';\nimport './verification.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Verification = _ref => {\n  _s();\n  let {\n    userEmail\n  } = _ref;\n  const {\n    changeEmail\n  } = useUserAuth();\n  const dispatch = useDispatch;\n\n  // Ref for focus element:\n  const emailRef = useRef(null);\n\n  // Final user email\n  const [email, setEmail] = useState(userEmail);\n  // User email state in FE\n  const [typedEmail, setTypedEmail] = useState('');\n  // Button text change\n  const [buttonText, setButtonText] = useState('Edit Email Address');\n  // Input visibility\n  const [inputVis, setInputVis] = useState('');\n\n  // Resend verification email\n  async function resendVerification(e) {\n    try {\n      setEmail(typedEmail);\n      await changeEmail(email);\n      // TODO: implement routing + BE logic\n      dispatch(resendVerification(email));\n    } catch (e) {\n      console.log(e);\n    }\n  }\n\n  // When user is typing, but hasn't confirmed the email\n  function editingEmail(typed) {\n    setTypedEmail(typed);\n    if (typed === '') {\n      setButtonText('Cancel');\n      // TODO: input display none\n    } else {\n      setButtonText('Resend Verification Email');\n    }\n  }\n\n  // When the user clicks confirm\n  function handleEmailEdit() {\n    if (buttonText === \"Edit Email Address\") {\n      // USER STARTS ACTION. Change from \"Edit Email Address\" to \"Cancel\"\n      setButtonText('Cancel');\n      setInputVis('opened__verification-input');\n      // When button text is cancel or confirm, the email is visibile. When button text is edit email address, email is none.\n      // TODO: input display flex\n    } else if (buttonText === \"Cancel\") {\n      // USER CANCELS ACTION. Change from \"Cancel\" to \"Edit email Address\"\n      setInputVis('');\n      setButtonText('Edit Email Address');\n      // TODO: input display none\n    } else if (buttonText === \"Resend Verification Email\") {\n      // Handle email change\n      setInputVis('');\n      setButtonText('Edit Email Address');\n      setTypedEmail(typedEmail);\n      setEmail(typedEmail);\n      resendVerification();\n      // TODO: change user email\n      // TODO: input display none\n    }\n  }\n\n  useEffect(() => {\n    // Listens for the button being clicked and adds focus to email\n    emailRef.current.focus(); // Because element unfocuses on handleModalSwitch\n  }, [buttonText]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"verification__bg\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"verification__modal\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"verification__modal-header\",\n        children: \"Verification email sent!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"verification__modal-text\",\n        children: \"Please activate your account to get started. Email sent to:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: /*#__PURE__*/_jsxDEV(\"font\", {\n          className: \"verification__modal-email\",\n          children: [\" \", email]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 16\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: `verification__input ${inputVis}`,\n        required: true,\n        placeholder: \"Email\",\n        autoComplete: \"email\",\n        name: \"email\",\n        ref: emailRef,\n        onChange: e => editingEmail(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"verification__button\",\n        onClick: handleEmailEdit,\n        children: buttonText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, this);\n};\n_s(Verification, \"7/VTpLJmGrIbD0ueL2GTiKBMPU8=\", false, function () {\n  return [useUserAuth];\n});\n_c = Verification;\nexport default Verification;\nvar _c;\n$RefreshReg$(_c, \"Verification\");","map":{"version":3,"names":["React","useState","useRef","useEffect","useDispatch","useUserAuth","Verification","userEmail","changeEmail","dispatch","emailRef","email","setEmail","typedEmail","setTypedEmail","buttonText","setButtonText","inputVis","setInputVis","resendVerification","e","console","log","editingEmail","typed","handleEmailEdit","current","focus","target","value"],"sources":["/Users/miller/Documents/rocketstart-web/client/src/modals/verification/Verification.jsx"],"sourcesContent":["import React from 'react'\nimport { useState, useRef, useEffect } from 'react'\nimport { useDispatch } from 'react-redux'\nimport { useUserAuth } from '../../context/AuthProvider'\nimport './verification.css'\n\nconst Verification = ({userEmail}) => {\n\n  const { changeEmail } = useUserAuth();\n  \n  const dispatch = useDispatch;\n\n  // Ref for focus element:\n  const emailRef = useRef(null);\n\n  // Final user email\n  const [email, setEmail] = useState(userEmail);\n  // User email state in FE\n  const [typedEmail, setTypedEmail] = useState('');\n  // Button text change\n  const [buttonText, setButtonText] = useState('Edit Email Address');\n  // Input visibility\n  const [inputVis, setInputVis] = useState('');\n\n  // Resend verification email\n  async function resendVerification(e) {\n    try {\n      setEmail(typedEmail)\n      await changeEmail(email);\n      // TODO: implement routing + BE logic\n      dispatch(resendVerification(email));\n    } catch (e) {\n      console.log(e)\n    }\n  }\n\n  // When user is typing, but hasn't confirmed the email\n  function editingEmail(typed) {\n    setTypedEmail(typed);\n    if(typed === '') {\n      setButtonText('Cancel');\n      // TODO: input display none\n    }\n    else {\n      setButtonText('Resend Verification Email');\n    }\n  }\n\n  // When the user clicks confirm\n  function handleEmailEdit() {\n    if(buttonText === \"Edit Email Address\") { // USER STARTS ACTION. Change from \"Edit Email Address\" to \"Cancel\"\n      setButtonText('Cancel');\n      setInputVis('opened__verification-input')\n      // When button text is cancel or confirm, the email is visibile. When button text is edit email address, email is none.\n      // TODO: input display flex\n    }\n    else if(buttonText === \"Cancel\"){ // USER CANCELS ACTION. Change from \"Cancel\" to \"Edit email Address\"\n      setInputVis('')\n      setButtonText('Edit Email Address');\n      // TODO: input display none\n    }\n    else if(buttonText === \"Resend Verification Email\") { // Handle email change\n      setInputVis('')\n      setButtonText('Edit Email Address');\n      setTypedEmail(typedEmail);\n      setEmail(typedEmail)\n      resendVerification()\n      // TODO: change user email\n      // TODO: input display none\n    }\n  }\n\n  useEffect(() => { // Listens for the button being clicked and adds focus to email\n    emailRef.current.focus(); // Because element unfocuses on handleModalSwitch\n   }, [buttonText])\n\n  return (\n    <div className='verification__bg'>\n        <div className='verification__modal'>\n            <h2 className='verification__modal-header'>Verification email sent!</h2>\n\n            <p className='verification__modal-text'>\n                Please activate your account to get started.\n                Email sent to:\n            </p>\n\n            <p><font className='verification__modal-email'> {email}</font></p>\n\n            {/* <button type=\"submit\" className='verification__button' onClick={() => {resendVerification()}}>\n              Resend Verification Email\n            </button> */}\n\n            <input\n                className={`verification__input ${inputVis}`}\n                required\n                placeholder=\"Email\"\n                autoComplete='email'\n                name='email'\n                ref={emailRef}\n                onChange={(e) => editingEmail(e.target.value)}></input>\n\n            <button type=\"submit\" className='verification__button' onClick={handleEmailEdit}>\n              {buttonText}\n            </button>\n\n        </div>\n    </div>\n  )\n}\n\nexport default Verification"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}