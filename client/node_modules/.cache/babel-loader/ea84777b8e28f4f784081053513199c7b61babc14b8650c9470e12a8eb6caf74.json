{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useEffect } from \"react\";\nfunction useOutsideClick(ref, handler) {\n  _s();\n  useEffect(() => {\n    const listener = event => {\n      // Do nothing if clicking ref's element or descendent elements\n      if (!ref.current || ref.current.contains(event.target)) {\n        return;\n      }\n      handler(event);\n    };\n    document.addEventListener(\"mousedown\", listener);\n    document.addEventListener(\"touchstart\", listener);\n    return () => {\n      document.removeEventListener(\"mousedown\", listener);\n      document.removeEventListener(\"touchstart\", listener);\n    };\n  },\n  // Add ref and handler to effect dependencies\n  // It's worth noting that because passed in handler is a new ...\n  // ... function on every render that will cause this effect ...\n  // ... callback/cleanup to run every render. It's not a big deal ...\n  // ... but to optimize you can wrap handler in useCallback before ...\n  // ... passing it into this hook.\n  [ref, handler]);\n}\n_s(useOutsideClick, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\nexport default useOutsideClick;","map":{"version":3,"names":["useEffect","useOutsideClick","ref","handler","listener","event","current","contains","target","document","addEventListener","removeEventListener"],"sources":["/Users/miller/Documents/rocketstart-web/client/src/modals/account/useOutsideClick.js"],"sourcesContent":["import { useEffect } from \"react\";\n\nfunction useOutsideClick(ref, handler) {\n    useEffect(\n      () => {\n        const listener = (event) => {\n          // Do nothing if clicking ref's element or descendent elements\n          if (!ref.current || ref.current.contains(event.target)) {\n            return;\n          }\n          handler(event);\n        };\n        document.addEventListener(\"mousedown\", listener);\n        document.addEventListener(\"touchstart\", listener);\n        return () => {\n          document.removeEventListener(\"mousedown\", listener);\n          document.removeEventListener(\"touchstart\", listener);\n        };\n      },\n      // Add ref and handler to effect dependencies\n      // It's worth noting that because passed in handler is a new ...\n      // ... function on every render that will cause this effect ...\n      // ... callback/cleanup to run every render. It's not a big deal ...\n      // ... but to optimize you can wrap handler in useCallback before ...\n      // ... passing it into this hook.\n      [ref, handler]\n    );\n  }\n\nexport default useOutsideClick;"],"mappings":";AAAA,SAASA,SAAS,QAAQ,OAAO;AAEjC,SAASC,eAAe,CAACC,GAAG,EAAEC,OAAO,EAAE;EAAA;EACnCH,SAAS,CACP,MAAM;IACJ,MAAMI,QAAQ,GAAIC,KAAK,IAAK;MAC1B;MACA,IAAI,CAACH,GAAG,CAACI,OAAO,IAAIJ,GAAG,CAACI,OAAO,CAACC,QAAQ,CAACF,KAAK,CAACG,MAAM,CAAC,EAAE;QACtD;MACF;MACAL,OAAO,CAACE,KAAK,CAAC;IAChB,CAAC;IACDI,QAAQ,CAACC,gBAAgB,CAAC,WAAW,EAAEN,QAAQ,CAAC;IAChDK,QAAQ,CAACC,gBAAgB,CAAC,YAAY,EAAEN,QAAQ,CAAC;IACjD,OAAO,MAAM;MACXK,QAAQ,CAACE,mBAAmB,CAAC,WAAW,EAAEP,QAAQ,CAAC;MACnDK,QAAQ,CAACE,mBAAmB,CAAC,YAAY,EAAEP,QAAQ,CAAC;IACtD,CAAC;EACH,CAAC;EACD;EACA;EACA;EACA;EACA;EACA;EACA,CAACF,GAAG,EAAEC,OAAO,CAAC,CACf;AACH;AAAC,GAzBMF,eAAe;AA2BxB,eAAeA,eAAe"},"metadata":{},"sourceType":"module","externalDependencies":[]}