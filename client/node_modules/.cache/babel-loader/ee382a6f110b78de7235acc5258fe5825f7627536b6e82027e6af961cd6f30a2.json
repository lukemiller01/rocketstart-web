{"ast":null,"code":"var _jsxFileName = \"/Users/miller/Documents/rocketstart-web/client/src/pages/auth/verify/VerifyEmail.jsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useState, useEffect, useRef } from 'react';\nimport Loading from '../../../components/loading/Loading';\nimport { useUserAuth } from '../../../context/AuthProvider';\nimport AuthResult from '../AuthResult';\nimport auth from \"../../../firebase\";\nimport { applyActionCode } from \"firebase/auth\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst VerifyEmail = _ref => {\n  _s();\n  let {\n    actionCode\n  } = _ref;\n  const [verified, setVerified] = useState(undefined);\n  const {\n    verifyEmail,\n    user\n  } = useUserAuth();\n  const timelineLoaded = useRef(false); // So useEffect only runs once\n\n  console.log('Enter verify email');\n  console.log('Action code', actionCode);\n  useEffect(() => {\n    async function checkCode() {\n      try {\n        if (!user.isEmailVerified()) {\n          await verifyEmail(action);\n          setVerified(true);\n        }\n      } catch (e) {\n        setVerified(false);\n      }\n    }\n    checkCode();\n    timelineLoaded.current = true;\n  }, [actionCode]);\n  return typeof verified === 'undefined' ? /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 48\n  }, this) : verified ? /*#__PURE__*/_jsxDEV(AuthResult, {\n    action: 'Email verification',\n    result: 'successful.',\n    message: 'Welcome to rocketstart!'\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 25\n  }, this) : /*#__PURE__*/_jsxDEV(AuthResult, {\n    action: 'Email verification',\n    result: 'unsuccessful.',\n    message: 'Your request to verify your email has expired or the link has already been used. Please try resending a code.'\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 25\n  }, this);\n};\n_s(VerifyEmail, \"uTQVPTbSDIQNc/eUWrP6a4mWNYU=\", false, function () {\n  return [useUserAuth];\n});\n_c = VerifyEmail;\nexport default VerifyEmail;\nvar _c;\n$RefreshReg$(_c, \"VerifyEmail\");","map":{"version":3,"names":["React","useState","useEffect","useRef","Loading","useUserAuth","AuthResult","auth","applyActionCode","VerifyEmail","actionCode","verified","setVerified","undefined","verifyEmail","user","timelineLoaded","console","log","checkCode","isEmailVerified","action","e","current"],"sources":["/Users/miller/Documents/rocketstart-web/client/src/pages/auth/verify/VerifyEmail.jsx"],"sourcesContent":["import React from 'react'\nimport { useState, useEffect, useRef } from 'react';\nimport Loading from '../../../components/loading/Loading';\nimport { useUserAuth } from '../../../context/AuthProvider';\nimport AuthResult from '../AuthResult';\nimport auth from \"../../../firebase\";\nimport {applyActionCode} from \"firebase/auth\";\n\nconst VerifyEmail = ({actionCode}) => {\n\n    const [verified, setVerified] = useState(undefined);\n    const { verifyEmail, user } = useUserAuth();\n    const timelineLoaded = useRef(false); // So useEffect only runs once\n\n    console.log('Enter verify email');\n    console.log('Action code', actionCode);\n\n    useEffect(() => {\n        async function checkCode() {\n\n            try {\n                if(!user.isEmailVerified()) {\n                    await verifyEmail(action)\n                    setVerified(true);\n                }\n            }\n            catch (e) {\n                setVerified(false);\n            }\n        }\n        checkCode();\n        timelineLoaded.current = true;\n    }, [actionCode]);\n\n    return typeof verified === 'undefined' ? ( <Loading/> ) :\n            verified? ( <AuthResult action={'Email verification'} result={'successful.'} message={'Welcome to rocketstart!'}/> )\n                    : ( <AuthResult action={'Email verification'} result={'unsuccessful.'} message={'Your request to verify your email has expired or the link has already been used. Please try resending a code.'}/>)\n}\n\nexport default VerifyEmail\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,EAAEC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AACnD,OAAOC,OAAO,MAAM,qCAAqC;AACzD,SAASC,WAAW,QAAQ,+BAA+B;AAC3D,OAAOC,UAAU,MAAM,eAAe;AACtC,OAAOC,IAAI,MAAM,mBAAmB;AACpC,SAAQC,eAAe,QAAO,eAAe;AAAC;AAE9C,MAAMC,WAAW,GAAG,QAAkB;EAAA;EAAA,IAAjB;IAACC;EAAU,CAAC;EAE7B,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGX,QAAQ,CAACY,SAAS,CAAC;EACnD,MAAM;IAAEC,WAAW;IAAEC;EAAK,CAAC,GAAGV,WAAW,EAAE;EAC3C,MAAMW,cAAc,GAAGb,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC;;EAEtCc,OAAO,CAACC,GAAG,CAAC,oBAAoB,CAAC;EACjCD,OAAO,CAACC,GAAG,CAAC,aAAa,EAAER,UAAU,CAAC;EAEtCR,SAAS,CAAC,MAAM;IACZ,eAAeiB,SAAS,GAAG;MAEvB,IAAI;QACA,IAAG,CAACJ,IAAI,CAACK,eAAe,EAAE,EAAE;UACxB,MAAMN,WAAW,CAACO,MAAM,CAAC;UACzBT,WAAW,CAAC,IAAI,CAAC;QACrB;MACJ,CAAC,CACD,OAAOU,CAAC,EAAE;QACNV,WAAW,CAAC,KAAK,CAAC;MACtB;IACJ;IACAO,SAAS,EAAE;IACXH,cAAc,CAACO,OAAO,GAAG,IAAI;EACjC,CAAC,EAAE,CAACb,UAAU,CAAC,CAAC;EAEhB,OAAO,OAAOC,QAAQ,KAAK,WAAW,gBAAK,QAAC,OAAO;IAAA;IAAA;IAAA;EAAA,QAAE,GAC7CA,QAAQ,gBAAI,QAAC,UAAU;IAAC,MAAM,EAAE,oBAAqB;IAAC,MAAM,EAAE,aAAc;IAAC,OAAO,EAAE;EAA0B;IAAA;IAAA;IAAA;EAAA,QAAE,gBACtG,QAAC,UAAU;IAAC,MAAM,EAAE,oBAAqB;IAAC,MAAM,EAAE,eAAgB;IAAC,OAAO,EAAE;EAAgH;IAAA;IAAA;IAAA;EAAA,QAAG;AACvN,CAAC;AAAA,GA7BKF,WAAW;EAAA,QAGiBJ,WAAW;AAAA;AAAA,KAHvCI,WAAW;AA+BjB,eAAeA,WAAW;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}