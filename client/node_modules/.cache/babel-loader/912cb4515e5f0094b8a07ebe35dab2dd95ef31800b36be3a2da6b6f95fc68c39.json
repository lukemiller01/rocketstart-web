{"ast":null,"code":"var _jsxFileName = \"/Users/miller/Documents/rocketstart-web/client/src/pages/auth/components/reset/PasswordResult.jsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { Navbar3 } from '../../../../components';\nimport { useNavigate } from \"react-router-dom\";\nimport { useState, useRef } from \"react\";\nimport './passwordResult.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PasswordResult = () => {\n  _s();\n  const navigate = useNavigate();\n  // Ref for focus element:\n  const passwordRef = useRef(null);\n  const [userInput, setUserInput] = useState({\n    password: '',\n    confirmPassword: ''\n  });\n  async function handleFormSubmit(e) {\n    e.preventDefault();\n    try {\n      if (userInput.password === userInput.confirmPassword) {\n        // TODO: confirmPassword method in AuthContext\n        navigate(\"/login\");\n      } else {\n        // Error: passwords do not match\n      }\n    } catch (e) {\n      console.log(e);\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Navbar3, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Reset Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"auth__result\",\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          className: \"signup__fields\",\n          onSubmit: handleFormSubmit,\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"signup__input\",\n            required: true,\n            placeholder: \"Email\",\n            autoComplete: \"email\",\n            name: \"email\",\n            autoFocus: true,\n            ref: passwordRef,\n            onChange: e => setUserInput({\n              ...userInput,\n              password: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"signup__input\",\n            required: true,\n            type: \"password\",\n            autoComplete: \"new-password\",\n            placeholder: \"Password\",\n            onChange: e => setUserInput({\n              ...userInput,\n              confirmPassword: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"signup__button\",\n            children: \"Reset Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n_s(PasswordResult, \"ALKCpoadk3PCBDSbznOmWWvV/LQ=\", false, function () {\n  return [useNavigate];\n});\n_c = PasswordResult;\nexport default PasswordResult;\nvar _c;\n$RefreshReg$(_c, \"PasswordResult\");","map":{"version":3,"names":["React","Navbar3","useNavigate","useState","useRef","PasswordResult","navigate","passwordRef","userInput","setUserInput","password","confirmPassword","handleFormSubmit","e","preventDefault","console","log","target","value"],"sources":["/Users/miller/Documents/rocketstart-web/client/src/pages/auth/components/reset/PasswordResult.jsx"],"sourcesContent":["import React from 'react';\nimport { Navbar3 } from '../../../../components';\nimport { useNavigate } from \"react-router-dom\";\nimport { useState, useRef } from \"react\";\nimport './passwordResult.css';\n\nconst PasswordResult = () => {\n\n    const navigate = useNavigate();\n    // Ref for focus element:\n    const passwordRef = useRef(null);\n    const [userInput, setUserInput] = useState({password: '', confirmPassword: ''})\n\n    async function handleFormSubmit(e) {\n        e.preventDefault();\n    \n        try {\n            if(userInput.password === userInput.confirmPassword) {\n                // TODO: confirmPassword method in AuthContext\n                navigate(\"/login\");\n            }\n            else {\n                // Error: passwords do not match\n            }\n        }\n        catch (e) {\n          console.log(e);\n        }\n    }\n\n  return (\n    <div>\n    <Navbar3/>\n    <div className='login'>\n    <h1>Reset Password</h1>\n      <div className='auth__result'>\n        <form className='signup__fields' onSubmit={handleFormSubmit}>\n            <input\n            className='signup__input'\n            required\n            placeholder=\"Email\"\n            autoComplete='email'\n            name='email'\n            autoFocus\n            ref={passwordRef}\n            onChange={(e) => setUserInput({...userInput, password: e.target.value})}\n            />\n            <input\n            className='signup__input'\n            required\n            type='password'\n            autoComplete='new-password'\n            placeholder=\"Password\"\n            onChange={(e) => setUserInput({...userInput, confirmPassword: e.target.value})}\n            />\n            <button type=\"submit\" className='signup__button'>\n                Reset Password\n            </button>\n        </form>\n      </div>\n    </div>\n</div>\n  )\n}\n\nexport default PasswordResult"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,OAAO,QAAQ,wBAAwB;AAChD,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,QAAQ,EAAEC,MAAM,QAAQ,OAAO;AACxC,OAAO,sBAAsB;AAAC;AAE9B,MAAMC,cAAc,GAAG,MAAM;EAAA;EAEzB,MAAMC,QAAQ,GAAGJ,WAAW,EAAE;EAC9B;EACA,MAAMK,WAAW,GAAGH,MAAM,CAAC,IAAI,CAAC;EAChC,MAAM,CAACI,SAAS,EAAEC,YAAY,CAAC,GAAGN,QAAQ,CAAC;IAACO,QAAQ,EAAE,EAAE;IAAEC,eAAe,EAAE;EAAE,CAAC,CAAC;EAE/E,eAAeC,gBAAgB,CAACC,CAAC,EAAE;IAC/BA,CAAC,CAACC,cAAc,EAAE;IAElB,IAAI;MACA,IAAGN,SAAS,CAACE,QAAQ,KAAKF,SAAS,CAACG,eAAe,EAAE;QACjD;QACAL,QAAQ,CAAC,QAAQ,CAAC;MACtB,CAAC,MACI;QACD;MAAA;IAER,CAAC,CACD,OAAOO,CAAC,EAAE;MACRE,OAAO,CAACC,GAAG,CAACH,CAAC,CAAC;IAChB;EACJ;EAEF,oBACE;IAAA,wBACA,QAAC,OAAO;MAAA;MAAA;MAAA;IAAA,QAAE,eACV;MAAK,SAAS,EAAC,OAAO;MAAA,wBACtB;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAuB,eACrB;QAAK,SAAS,EAAC,cAAc;QAAA,uBAC3B;UAAM,SAAS,EAAC,gBAAgB;UAAC,QAAQ,EAAED,gBAAiB;UAAA,wBACxD;YACA,SAAS,EAAC,eAAe;YACzB,QAAQ;YACR,WAAW,EAAC,OAAO;YACnB,YAAY,EAAC,OAAO;YACpB,IAAI,EAAC,OAAO;YACZ,SAAS;YACT,GAAG,EAAEL,WAAY;YACjB,QAAQ,EAAGM,CAAC,IAAKJ,YAAY,CAAC;cAAC,GAAGD,SAAS;cAAEE,QAAQ,EAAEG,CAAC,CAACI,MAAM,CAACC;YAAK,CAAC;UAAE;YAAA;YAAA;YAAA;UAAA,QACtE,eACF;YACA,SAAS,EAAC,eAAe;YACzB,QAAQ;YACR,IAAI,EAAC,UAAU;YACf,YAAY,EAAC,cAAc;YAC3B,WAAW,EAAC,UAAU;YACtB,QAAQ,EAAGL,CAAC,IAAKJ,YAAY,CAAC;cAAC,GAAGD,SAAS;cAAEG,eAAe,EAAEE,CAAC,CAACI,MAAM,CAACC;YAAK,CAAC;UAAE;YAAA;YAAA;YAAA;UAAA,QAC7E,eACF;YAAQ,IAAI,EAAC,QAAQ;YAAC,SAAS,EAAC,gBAAgB;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QAEvC;QAAA;UAAA;UAAA;UAAA;QAAA;MACN;QAAA;QAAA;QAAA;MAAA,QACH;IAAA;MAAA;MAAA;MAAA;IAAA,QACF;EAAA;IAAA;IAAA;IAAA;EAAA,QACJ;AAEN,CAAC;AAAA,GAzDKb,cAAc;EAAA,QAECH,WAAW;AAAA;AAAA,KAF1BG,cAAc;AA2DpB,eAAeA,cAAc;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}