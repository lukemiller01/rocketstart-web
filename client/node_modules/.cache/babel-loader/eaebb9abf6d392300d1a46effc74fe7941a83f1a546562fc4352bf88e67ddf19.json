{"ast":null,"code":"var _jsxFileName = \"/Users/miller/Documents/rocketstart-web/client/src/modals/verification/Verification.jsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useState, useRef } from 'react';\nimport { useDispatch } from 'react-redux';\nimport './verification.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Verification = _ref => {\n  _s();\n  let {\n    userEmail\n  } = _ref;\n  const dispatch = useDispatch;\n\n  // Ref for focus element:\n  const emailRef = useRef(null);\n  const buttonRef = useRef(null);\n\n  // Final user email\n  const [email, setEmail] = useState(userEmail);\n  // User email state in FE\n  const [typedEmail, setTypedEmail] = useState('');\n  // Button text change\n  const [buttonText, setButtonText] = useState('Edit Email Address');\n\n  // Resend verification email\n  async function resendVerification(e) {\n    try {\n      setEmail(typedEmail);\n      dispatch(resendVerification(email)); // TODO: implement routing + BE logic\n    } catch (e) {\n      console.log(e);\n    }\n  }\n\n  // When user is typing, but hasn't confirmed the email\n  function editingEmail(typed) {\n    setTypedEmail(typed);\n    if (typed === '') {\n      setButtonText('Cancel');\n      // TODO: input display none\n    } else {\n      setButtonText('Confirm');\n    }\n  }\n\n  // When the user clicks confirm\n  function handleEmailEdit() {\n    if (buttonText === \"Edit Email Address\") {\n      // USER STARTS ACTION. Change from \"Edit Email Address\" to \"Cancel\"\n      setButtonText('Cancel');\n      // When button text is cancel or confirm, the email is visibile. When button text is edit email address, email is none.\n      // TODO: input display flex\n    } else if (buttonText === \"Cancel\") {\n      // USER CANCELS ACTION. Change from \"Cancel\" to \"Edit email Address\"\n      setButtonText('Edit Email Address');\n      // TODO: input display none\n    } else if (buttonText === \"Confirm\") {\n      // Handle email change\n      setButtonText('Edit Email Address');\n      setTypedEmail(typedEmail);\n      // TODO: change user email\n      // TODO: input display none\n    }\n\n    buttonRef.blur();\n    emailRef.focus(); // Because element unfocuses on handleModalSwitch\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"verification__bg\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"verification__modal\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"verification__modal-header\",\n        children: \"Verification email sent!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"verification__modal-text\",\n        children: \"Please check your inbox and activate your account to get started. Email sent to:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: /*#__PURE__*/_jsxDEV(\"font\", {\n          className: \"verification__modal-email\",\n          children: [\" \", userEmail]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 16\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"verification__button\",\n        onClick: () => {\n          resendVerification();\n        },\n        children: \"Resend Verification Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: `verification__input ${buttonText + \"__verification-input\"}`,\n        required: true,\n        placeholder: \"Email\",\n        autoComplete: \"email\",\n        name: \"email\",\n        autoFocus: true,\n        ref: emailRef,\n        onChange: e => editingEmail(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"verification__button\",\n        onClick: handleEmailEdit,\n        ref: buttonRef,\n        children: buttonText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n};\n_s(Verification, \"r6HhrJLfBPGsBFmjVX4fHi8oMeE=\");\n_c = Verification;\nexport default Verification;\nvar _c;\n$RefreshReg$(_c, \"Verification\");","map":{"version":3,"names":["React","useState","useRef","useDispatch","Verification","userEmail","dispatch","emailRef","buttonRef","email","setEmail","typedEmail","setTypedEmail","buttonText","setButtonText","resendVerification","e","console","log","editingEmail","typed","handleEmailEdit","blur","focus","target","value"],"sources":["/Users/miller/Documents/rocketstart-web/client/src/modals/verification/Verification.jsx"],"sourcesContent":["import React from 'react'\nimport { useState, useRef } from 'react'\nimport { useDispatch } from 'react-redux'\nimport './verification.css'\n\nconst Verification = ({userEmail}) => {\n\n  const dispatch = useDispatch;\n\n  // Ref for focus element:\n  const emailRef = useRef(null);\n  const buttonRef = useRef(null);\n\n  // Final user email\n  const [email, setEmail] = useState(userEmail);\n  // User email state in FE\n  const [typedEmail, setTypedEmail] = useState('');\n  // Button text change\n  const [buttonText, setButtonText] = useState('Edit Email Address');\n\n  // Resend verification email\n  async function resendVerification(e) {\n    try {\n      setEmail(typedEmail)\n      dispatch(resendVerification(email)); // TODO: implement routing + BE logic\n    } catch (e) {\n      console.log(e)\n    }\n  }\n\n  // When user is typing, but hasn't confirmed the email\n  function editingEmail(typed) {\n    setTypedEmail(typed);\n    if(typed === '') {\n      setButtonText('Cancel');\n      // TODO: input display none\n    }\n    else {\n      setButtonText('Confirm');\n    }\n  }\n\n  // When the user clicks confirm\n  function handleEmailEdit() {\n    if(buttonText === \"Edit Email Address\") { // USER STARTS ACTION. Change from \"Edit Email Address\" to \"Cancel\"\n      setButtonText('Cancel');\n      // When button text is cancel or confirm, the email is visibile. When button text is edit email address, email is none.\n      // TODO: input display flex\n    }\n    else if(buttonText === \"Cancel\"){ // USER CANCELS ACTION. Change from \"Cancel\" to \"Edit email Address\"\n      setButtonText('Edit Email Address');\n      // TODO: input display none\n    }\n    else if(buttonText === \"Confirm\") { // Handle email change\n      setButtonText('Edit Email Address');\n      setTypedEmail(typedEmail);\n      // TODO: change user email\n      // TODO: input display none\n    }\n    buttonRef.blur();\n    emailRef.focus(); // Because element unfocuses on handleModalSwitch\n  }\n\n  return (\n    <div className='verification__bg'>\n        <div className='verification__modal'>\n            <h2 className='verification__modal-header'>Verification email sent!</h2>\n\n            <p className='verification__modal-text'>\n                Please check your inbox and activate your account to get started. Email sent to:\n            </p>\n\n            <p><font className='verification__modal-email'> {userEmail}</font></p>\n\n            <button type=\"submit\" className='verification__button' onClick={() => {resendVerification()}}>\n              Resend Verification Email\n            </button>\n\n            <input\n                className={`verification__input ${buttonText + \"__verification-input\"}`}\n                required\n                placeholder=\"Email\"\n                autoComplete='email'\n                name='email'\n                autoFocus\n                ref={emailRef}\n                onChange={(e) => editingEmail(e.target.value)}></input>\n\n            <button type=\"submit\" className='verification__button' onClick={handleEmailEdit} ref={buttonRef}>\n              {buttonText}\n            </button>\n\n        </div>\n    </div>\n  )\n}\n\nexport default Verification"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}