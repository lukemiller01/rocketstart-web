{"ast":null,"code":"var _jsxFileName = \"/Users/miller/Documents/rocketstart-web/client/src/pages/login/Login.jsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useState } from 'react';\nimport { SignUp } from '../../modals';\nimport { Navbar3 } from '../../components';\nimport './login.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = () => {\n  _s();\n  // Parameters needed for the SignUp component:\n  let modalOpen = true;\n  const [buttonState, setButtonState] = useState('Sign In');\n  const [bottomTextQState, setBottomTextQState] = useState('No account?');\n  const [bottomTextAState, setBottomTextAState] = useState('Create One');\n  const [termsTextState, setTermsTextState] = useState(false);\n  const [resetTextState, setResetTextState] = useState(false);\n  const [passwordState, setPasswordState] = useState(true);\n  let terms = termsTextState ? '' : 'signup__no-visibility';\n  let reset = resetTextState ? 'signup__no-visibility' : '';\n  let password = passwordState ? '' : 'signup__no-visibility';\n\n  // Components needed for the rest of the page:\n  const [headerState, setHeaderState] = useState(\"Welcome back!\");\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Navbar3, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: headerState\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(SignUp, {\n        setModalOpen: modalOpen // To open and close the modal with the close button\n        ,\n        buttonText: buttonState // The modal text button\n        ,\n        setButtonState: setButtonState // To change the text if the user navigates to the other button\n        ,\n        question: bottomTextQState // Text for the question\n        ,\n        answer: bottomTextAState // Text for the answer\n        ,\n        setBottomTextQState: setBottomTextQState // To set the question\n        ,\n        setBottomTextAState: setBottomTextAState // To set the answer\n        ,\n        terms: terms // Access to terms & privacy text\n        ,\n        setTermsTextState: setTermsTextState // To set the term visibility\n        ,\n        reset: reset // Access to Reset button\n        ,\n        setResetTextState: setResetTextState // To set the reset visibility\n        ,\n        password: password // Access to password button\n        ,\n        setPasswordState: setPasswordState // To set password button\n        ,\n        background: \"login__bg\" // To remove the absolute positioning\n        ,\n        closeButton: \"close__none\" // To remove the close button\n        ,\n        setHeaderState: setHeaderState // To set the header\n        ,\n        containerMargin: 'signup__login'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n_s(Login, \"0wanhIb11fD7O93A7uAlKzINS1g=\");\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","SignUp","Navbar3","Login","modalOpen","buttonState","setButtonState","bottomTextQState","setBottomTextQState","bottomTextAState","setBottomTextAState","termsTextState","setTermsTextState","resetTextState","setResetTextState","passwordState","setPasswordState","terms","reset","password","headerState","setHeaderState"],"sources":["/Users/miller/Documents/rocketstart-web/client/src/pages/login/Login.jsx"],"sourcesContent":["import React from 'react'\nimport { useState } from 'react';\nimport { SignUp } from '../../modals'\nimport { Navbar3 } from '../../components'\nimport './login.css';\n\nconst Login = () => {\n\n    // Parameters needed for the SignUp component:\n    let modalOpen = true;\n    const [buttonState, setButtonState] = useState('Sign In');\n    const [bottomTextQState, setBottomTextQState] = useState('No account?');\n    const [bottomTextAState, setBottomTextAState] = useState('Create One');\n    const [termsTextState, setTermsTextState] = useState(false);\n    const [resetTextState, setResetTextState] = useState(false);\n    const [passwordState, setPasswordState] = useState(true);\n    let terms = termsTextState ? '' : 'signup__no-visibility';\n    let reset = resetTextState ? 'signup__no-visibility' : '';\n    let password = passwordState ? '' : 'signup__no-visibility';\n\n    // Components needed for the rest of the page:\n    const [ headerState, setHeaderState] = useState(\"Welcome back!\");\n\n  return (\n    <div>\n        <Navbar3/>\n        <div className='login'>\n          <h1>{headerState}</h1>\n          <SignUp\n              setModalOpen={modalOpen} // To open and close the modal with the close button\n              buttonText={buttonState} // The modal text button\n              setButtonState={setButtonState} // To change the text if the user navigates to the other button\n              question={bottomTextQState} // Text for the question\n              answer={bottomTextAState} // Text for the answer\n              setBottomTextQState={setBottomTextQState} // To set the question\n              setBottomTextAState={setBottomTextAState} // To set the answer\n              terms={terms} // Access to terms & privacy text\n              setTermsTextState={setTermsTextState} // To set the term visibility\n              reset={reset} // Access to Reset button\n              setResetTextState={setResetTextState} // To set the reset visibility\n              password={password} // Access to password button\n              setPasswordState={setPasswordState} // To set password button\n              background={\"login__bg\"} // To remove the absolute positioning\n              closeButton={\"close__none\"} // To remove the close button\n              setHeaderState={setHeaderState} // To set the header\n              containerMargin={'signup__login'}\n          />\n        </div>\n    </div>\n  )\n}\n\nexport default Login"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,QAAQ,OAAO;AAChC,SAASC,MAAM,QAAQ,cAAc;AACrC,SAASC,OAAO,QAAQ,kBAAkB;AAC1C,OAAO,aAAa;AAAC;AAErB,MAAMC,KAAK,GAAG,MAAM;EAAA;EAEhB;EACA,IAAIC,SAAS,GAAG,IAAI;EACpB,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGN,QAAQ,CAAC,SAAS,CAAC;EACzD,MAAM,CAACO,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGR,QAAQ,CAAC,aAAa,CAAC;EACvE,MAAM,CAACS,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGV,QAAQ,CAAC,YAAY,CAAC;EACtE,MAAM,CAACW,cAAc,EAAEC,iBAAiB,CAAC,GAAGZ,QAAQ,CAAC,KAAK,CAAC;EAC3D,MAAM,CAACa,cAAc,EAAEC,iBAAiB,CAAC,GAAGd,QAAQ,CAAC,KAAK,CAAC;EAC3D,MAAM,CAACe,aAAa,EAAEC,gBAAgB,CAAC,GAAGhB,QAAQ,CAAC,IAAI,CAAC;EACxD,IAAIiB,KAAK,GAAGN,cAAc,GAAG,EAAE,GAAG,uBAAuB;EACzD,IAAIO,KAAK,GAAGL,cAAc,GAAG,uBAAuB,GAAG,EAAE;EACzD,IAAIM,QAAQ,GAAGJ,aAAa,GAAG,EAAE,GAAG,uBAAuB;;EAE3D;EACA,MAAM,CAAEK,WAAW,EAAEC,cAAc,CAAC,GAAGrB,QAAQ,CAAC,eAAe,CAAC;EAElE,oBACE;IAAA,wBACI,QAAC,OAAO;MAAA;MAAA;MAAA;IAAA,QAAE,eACV;MAAK,SAAS,EAAC,OAAO;MAAA,wBACpB;QAAA,UAAKoB;MAAW;QAAA;QAAA;QAAA;MAAA,QAAM,eACtB,QAAC,MAAM;QACH,YAAY,EAAEhB,SAAU,CAAC;QAAA;QACzB,UAAU,EAAEC,WAAY,CAAC;QAAA;QACzB,cAAc,EAAEC,cAAe,CAAC;QAAA;QAChC,QAAQ,EAAEC,gBAAiB,CAAC;QAAA;QAC5B,MAAM,EAAEE,gBAAiB,CAAC;QAAA;QAC1B,mBAAmB,EAAED,mBAAoB,CAAC;QAAA;QAC1C,mBAAmB,EAAEE,mBAAoB,CAAC;QAAA;QAC1C,KAAK,EAAEO,KAAM,CAAC;QAAA;QACd,iBAAiB,EAAEL,iBAAkB,CAAC;QAAA;QACtC,KAAK,EAAEM,KAAM,CAAC;QAAA;QACd,iBAAiB,EAAEJ,iBAAkB,CAAC;QAAA;QACtC,QAAQ,EAAEK,QAAS,CAAC;QAAA;QACpB,gBAAgB,EAAEH,gBAAiB,CAAC;QAAA;QACpC,UAAU,EAAE,WAAY,CAAC;QAAA;QACzB,WAAW,EAAE,aAAc,CAAC;QAAA;QAC5B,cAAc,EAAEK,cAAe,CAAC;QAAA;QAChC,eAAe,EAAE;MAAgB;QAAA;QAAA;QAAA;MAAA,QACnC;IAAA;MAAA;MAAA;MAAA;IAAA,QACE;EAAA;IAAA;IAAA;IAAA;EAAA,QACJ;AAEV,CAAC;AAAA,GA5CKlB,KAAK;AAAA,KAALA,KAAK;AA8CX,eAAeA,KAAK;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}