{"ast":null,"code":"var _jsxFileName = \"/Users/miller/Documents/rocketstart-web/client/src/pages/auth/verify/VerifyEmail.jsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useState, useEffect } from 'react';\nimport Loading from '../../../components/loading/Loading';\nimport { useUserAuth } from '../../../context/AuthProvider';\nimport AuthResult from '../AuthResult';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst VerifyEmail = _ref => {\n  _s();\n  let {\n    actionCode\n  } = _ref;\n  const [verifyData, setVerifyDataState] = useState({\n    error: '',\n    validCode: null,\n    verifiedCode: false\n  });\n  const {\n    verifyEmail\n  } = useUserAuth();\n  async function checkCode() {\n    try {\n      await verifyEmail(actionCode);\n      setVerifyDataState({\n        ...verifyData,\n        validCode: true,\n        verifiedCode: true\n      });\n    } catch (e) {\n      setVerifyDataState({\n        error: e.message,\n        validCode: false,\n        verifiedCode: true\n      });\n    }\n  }\n  useEffect(() => {\n    async function checkCode() {\n      try {\n        await verifyEmail(actionCode);\n        setVerifyDataState({\n          ...verifyData,\n          validCode: true,\n          verifiedCode: true\n        });\n      } catch (e) {\n        setVerifyDataState({\n          error: e.message,\n          validCode: false,\n          verifiedCode: true\n        });\n      }\n    }\n    checkCode();\n  }, [verifyData.verifiedCode, verifyData.validCode]); //dependency added\n\n  return !verifyData.verifiedCode ? /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this) : verifyData.verifiedCode && verifyData.validCode ? /*#__PURE__*/_jsxDEV(AuthResult, {\n    action: 'Email verification',\n    result: 'successful.',\n    message: 'Welcome to rocketstart!'\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 56\n  }, this) : /*#__PURE__*/_jsxDEV(AuthResult, {\n    action: 'Email verification',\n    result: 'unsuccessful.',\n    message: 'Your request to verify your email has expired or the link has already been used. Please try resending a code.'\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 57\n  }, this);\n};\n_s(VerifyEmail, \"PLBsx7xCxqG0JJRvs77kTPxAMdE=\", false, function () {\n  return [useUserAuth];\n});\n_c = VerifyEmail;\nexport default VerifyEmail;\nvar _c;\n$RefreshReg$(_c, \"VerifyEmail\");","map":{"version":3,"names":["React","useState","useEffect","Loading","useUserAuth","AuthResult","VerifyEmail","actionCode","verifyData","setVerifyDataState","error","validCode","verifiedCode","verifyEmail","checkCode","e","message"],"sources":["/Users/miller/Documents/rocketstart-web/client/src/pages/auth/verify/VerifyEmail.jsx"],"sourcesContent":["import React from 'react'\nimport { useState, useEffect } from 'react';\nimport Loading from '../../../components/loading/Loading';\nimport { useUserAuth } from '../../../context/AuthProvider';\nimport AuthResult from '../AuthResult';\n\nconst VerifyEmail = ({actionCode}) => {\n\n    const [verifyData, setVerifyDataState] = useState({error: '', validCode: null, verifiedCode: false});\n\n    const { verifyEmail } = useUserAuth();\n\n    async function checkCode() {\n\n        try {\n            await verifyEmail(actionCode);\n            setVerifyDataState({...verifyData, validCode: true, verifiedCode: true});\n        }\n        catch (e) {\n            setVerifyDataState({error: e.message, validCode: false, verifiedCode: true});\n        }\n    }\n\n    useEffect(() => {\n        async function checkCode() {\n\n            try {\n                await verifyEmail(actionCode);\n                setVerifyDataState({...verifyData, validCode: true, verifiedCode: true});\n            }\n            catch (e) {\n                setVerifyDataState({error: e.message, validCode: false, verifiedCode: true});\n            }\n        }\n\n        checkCode();\n    },[verifyData.verifiedCode, verifyData.validCode,  ]) //dependency added\n\n\nreturn !verifyData.verifiedCode ? (\n    <Loading/> ) :\n    verifyData.verifiedCode && verifyData.validCode? ( <AuthResult action={'Email verification'} result={'successful.'} message={'Welcome to rocketstart!'}/> )\n                                                    : ( <AuthResult action={'Email verification'} result={'unsuccessful.'} message={'Your request to verify your email has expired or the link has already been used. Please try resending a code.'}/>\n    )\n}\n\nexport default VerifyEmail"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,OAAOC,OAAO,MAAM,qCAAqC;AACzD,SAASC,WAAW,QAAQ,+BAA+B;AAC3D,OAAOC,UAAU,MAAM,eAAe;AAAC;AAEvC,MAAMC,WAAW,GAAG,QAAkB;EAAA;EAAA,IAAjB;IAACC;EAAU,CAAC;EAE7B,MAAM,CAACC,UAAU,EAAEC,kBAAkB,CAAC,GAAGR,QAAQ,CAAC;IAACS,KAAK,EAAE,EAAE;IAAEC,SAAS,EAAE,IAAI;IAAEC,YAAY,EAAE;EAAK,CAAC,CAAC;EAEpG,MAAM;IAAEC;EAAY,CAAC,GAAGT,WAAW,EAAE;EAErC,eAAeU,SAAS,GAAG;IAEvB,IAAI;MACA,MAAMD,WAAW,CAACN,UAAU,CAAC;MAC7BE,kBAAkB,CAAC;QAAC,GAAGD,UAAU;QAAEG,SAAS,EAAE,IAAI;QAAEC,YAAY,EAAE;MAAI,CAAC,CAAC;IAC5E,CAAC,CACD,OAAOG,CAAC,EAAE;MACNN,kBAAkB,CAAC;QAACC,KAAK,EAAEK,CAAC,CAACC,OAAO;QAAEL,SAAS,EAAE,KAAK;QAAEC,YAAY,EAAE;MAAI,CAAC,CAAC;IAChF;EACJ;EAEAV,SAAS,CAAC,MAAM;IACZ,eAAeY,SAAS,GAAG;MAEvB,IAAI;QACA,MAAMD,WAAW,CAACN,UAAU,CAAC;QAC7BE,kBAAkB,CAAC;UAAC,GAAGD,UAAU;UAAEG,SAAS,EAAE,IAAI;UAAEC,YAAY,EAAE;QAAI,CAAC,CAAC;MAC5E,CAAC,CACD,OAAOG,CAAC,EAAE;QACNN,kBAAkB,CAAC;UAACC,KAAK,EAAEK,CAAC,CAACC,OAAO;UAAEL,SAAS,EAAE,KAAK;UAAEC,YAAY,EAAE;QAAI,CAAC,CAAC;MAChF;IACJ;IAEAE,SAAS,EAAE;EACf,CAAC,EAAC,CAACN,UAAU,CAACI,YAAY,EAAEJ,UAAU,CAACG,SAAS,CAAI,CAAC,EAAC;;EAG1D,OAAO,CAACH,UAAU,CAACI,YAAY,gBAC3B,QAAC,OAAO;IAAA;IAAA;IAAA;EAAA,QAAE,GACVJ,UAAU,CAACI,YAAY,IAAIJ,UAAU,CAACG,SAAS,gBAAI,QAAC,UAAU;IAAC,MAAM,EAAE,oBAAqB;IAAC,MAAM,EAAE,aAAc;IAAC,OAAO,EAAE;EAA0B;IAAA;IAAA;IAAA;EAAA,QAAE,gBACrG,QAAC,UAAU;IAAC,MAAM,EAAE,oBAAqB;IAAC,MAAM,EAAE,eAAgB;IAAC,OAAO,EAAE;EAAgH;IAAA;IAAA;IAAA;EAAA,QAC/O;AACL,CAAC;AAAA,GAtCKL,WAAW;EAAA,QAIWF,WAAW;AAAA;AAAA,KAJjCE,WAAW;AAwCjB,eAAeA,WAAW;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}