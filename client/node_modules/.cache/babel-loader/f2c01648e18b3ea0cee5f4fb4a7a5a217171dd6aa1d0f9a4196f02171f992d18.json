{"ast":null,"code":"var _jsxFileName = \"/Users/miller/Documents/rocketstart-web/client/src/pages/auth/verify/VerifyEmail.jsx\";\nimport React from 'react';\n// import { useState, useEffect } from 'react';\nimport Loading from '../../../components/loading/Loading';\n// import { useUserAuth } from '../../../context/AuthProvider';\nimport AuthResult from '../AuthResult';\nimport auth from \"../../../firebase\";\nimport { applyActionCode } from \"firebase/auth\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst VerifyEmail = _ref => {\n  let {\n    actionCode\n  } = _ref;\n  // const [verified, setVerified] = useState(undefined);\n  // const { verifyEmail, user } = useUserAuth();\n  // const { verifyEmail(actionCode) } = useUserAuth();\n\n  console.log('Enter verify email');\n  console.log('Action code', actionCode);\n  try {\n    applyActionCode(auth, actionCode).then(() => {\n      return /*#__PURE__*/_jsxDEV(AuthResult, {\n        action: 'Email verification',\n        result: 'successful.',\n        message: 'Welcome to rocketstart!'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 20\n      }, this);\n    });\n    // console.log(verified);\n  } catch (e) {\n    console.log(e);\n  }\n\n  // useEffect(() => {\n  //     async function checkCode() {\n\n  //         try {\n  //             if(!user.isEmailVerified()) {\n  //                 await verifyEmail(actionCode)\n  //                 setVerified(true);\n  //             }\n  //         }\n  //         catch (e) {\n  //             setVerified(false);\n  //         }\n  //     }\n  //     checkCode();\n  // }, [user, verifyEmail, actionCode]);\n\n  // return typeof verified === 'undefined' ? ( <Loading/> ) :\n  //         verified? ( <AuthResult action={'Email verification'} result={'successful.'} message={'Welcome to rocketstart!'}/> )\n  //                 : ( <AuthResult action={'Email verification'} result={'unsuccessful.'} message={'Your request to verify your email has expired or the link has already been used. Please try resending a code.'}/>)\n};\n_c = VerifyEmail;\nexport default VerifyEmail;\nvar _c;\n$RefreshReg$(_c, \"VerifyEmail\");","map":{"version":3,"names":["React","Loading","AuthResult","auth","applyActionCode","VerifyEmail","actionCode","console","log","then","e"],"sources":["/Users/miller/Documents/rocketstart-web/client/src/pages/auth/verify/VerifyEmail.jsx"],"sourcesContent":["import React from 'react'\n// import { useState, useEffect } from 'react';\nimport Loading from '../../../components/loading/Loading';\n// import { useUserAuth } from '../../../context/AuthProvider';\nimport AuthResult from '../AuthResult';\nimport auth from \"../../../firebase\";\nimport {\n  applyActionCode,\n  } from \"firebase/auth\";\n\nconst VerifyEmail = ({actionCode}) => {\n\n    // const [verified, setVerified] = useState(undefined);\n    // const { verifyEmail, user } = useUserAuth();\n    // const { verifyEmail(actionCode) } = useUserAuth();\n\n    console.log('Enter verify email');\n    console.log('Action code', actionCode);\n\n    try {\n        applyActionCode(auth, actionCode).then(() => {\n            return <AuthResult action={'Email verification'} result={'successful.'} message={'Welcome to rocketstart!'}/>\n        })\n        // console.log(verified);\n    }\n    catch (e) {\n        console.log(e)\n    }\n\n    // useEffect(() => {\n    //     async function checkCode() {\n\n    //         try {\n    //             if(!user.isEmailVerified()) {\n    //                 await verifyEmail(actionCode)\n    //                 setVerified(true);\n    //             }\n    //         }\n    //         catch (e) {\n    //             setVerified(false);\n    //         }\n    //     }\n    //     checkCode();\n    // }, [user, verifyEmail, actionCode]);\n\n    // return typeof verified === 'undefined' ? ( <Loading/> ) :\n    //         verified? ( <AuthResult action={'Email verification'} result={'successful.'} message={'Welcome to rocketstart!'}/> )\n    //                 : ( <AuthResult action={'Email verification'} result={'unsuccessful.'} message={'Your request to verify your email has expired or the link has already been used. Please try resending a code.'}/>)\n}\n\nexport default VerifyEmail\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB;AACA,OAAOC,OAAO,MAAM,qCAAqC;AACzD;AACA,OAAOC,UAAU,MAAM,eAAe;AACtC,OAAOC,IAAI,MAAM,mBAAmB;AACpC,SACEC,eAAe,QACR,eAAe;AAAC;AAEzB,MAAMC,WAAW,GAAG,QAAkB;EAAA,IAAjB;IAACC;EAAU,CAAC;EAE7B;EACA;EACA;;EAEAC,OAAO,CAACC,GAAG,CAAC,oBAAoB,CAAC;EACjCD,OAAO,CAACC,GAAG,CAAC,aAAa,EAAEF,UAAU,CAAC;EAEtC,IAAI;IACAF,eAAe,CAACD,IAAI,EAAEG,UAAU,CAAC,CAACG,IAAI,CAAC,MAAM;MACzC,oBAAO,QAAC,UAAU;QAAC,MAAM,EAAE,oBAAqB;QAAC,MAAM,EAAE,aAAc;QAAC,OAAO,EAAE;MAA0B;QAAA;QAAA;QAAA;MAAA,QAAE;IACjH,CAAC,CAAC;IACF;EACJ,CAAC,CACD,OAAOC,CAAC,EAAE;IACNH,OAAO,CAACC,GAAG,CAACE,CAAC,CAAC;EAClB;;EAEA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;AACJ,CAAC;AAAA,KAtCKL,WAAW;AAwCjB,eAAeA,WAAW;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}